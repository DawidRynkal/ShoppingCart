{"version":3,"sources":["components/product.jpeg","components/Subtotal/Subtotal.js","components/PickupSaving/PickupSaving.js","components/TaxesFees/TaxesFees.js","components/EstimatedTotal/EstimatedTotal.js","components/ItemDetails/ItemDetails.js","components/PromoCode/PromoCode.js","components/actions/PromoCodeAction.js","components/actions/types.js","App.js","serviceWorker.js","components/reducers/PromoCodeReducer.js","components/reducers/index.js","store.js","index.js"],"names":["module","exports","Subtotal","Row","className","Col","md","this","props","price","Component","styles","pickupSaving","textDecoration","totalSavings","color","fontWeight","PickupSaving","tooltip","Tooltip","id","OverlayTrigger","placement","overlay","style","TaxesFees","taxes","Estimatedtotal","ItemDetails","state","open","Button","bsStyle","onClick","setState","Collapse","in","Media","Image","rounded","width","fluid","src","img","alt","Body","PromoCodeDiscount","handleChange","e","value","Form","FormGroup","controlId","FormLabel","FormControl","type","placeholder","promoCode","onChange","block","disabled","isDisabled","giveDiscount","connect","dispatch","payload","target","App","giveDiscountHandler","estimatedTotal","disabledPromoButton","total","Container","toFixed","PromoCode","Boolean","window","location","hostname","match","initialState","promoCodeReducer","action","combineReducers","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","devToolsExtension","f","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.50a19e31.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/product.23d0ef2f.jpeg\";","import React, { Component } from 'react';\r\nimport { Row, Col } from 'react-bootstrap'\r\n\r\nexport default class Subtotal extends Component {\r\n    render() {\r\n        return (\r\n            <Row className='show-grid'>\r\n                <Col md={6}>Subtotal</Col>\r\n                <Col md={6}>{`$${this.props.price}`}</Col>\r\n            </Row>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Row, Col, Tooltip, OverlayTrigger } from 'react-bootstrap';\r\n\r\nconst styles = {\r\n    pickupSaving: {\r\n        textDecoration: 'underline'\r\n    },\r\n    totalSavings: {\r\n        color: 'red',\r\n        fontWeight: 700,\r\n    }\r\n}\r\n\r\nexport default class PickupSaving extends Component {\r\n    render() {\r\n        const tooltip = (\r\n            <Tooltip id=\"tooltip\">\r\n                <p>Picking up your order in the store helps cut costs, and we pass the savings on to you.</p>\r\n            </Tooltip>\r\n        )\r\n\r\n\r\n        return (\r\n            <Row className='show-grid'>\r\n                <Col md={6}>\r\n                    <OverlayTrigger placement='bottom' overlay={tooltip}>\r\n                        <div style={styles.pickupSaving}>Pickup Savings</div>\r\n                    </OverlayTrigger>\r\n                </Col>\r\n                <Col md={6} style={styles.totalSavings}>{`$${this.props.price}`}</Col>\r\n            </Row>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\n\r\nexport default class TaxesFees extends Component {\r\n    render() {\r\n        return (\r\n            <Row className='show-grid'>\r\n                <Col md={6}>Est. taxes & fees</Col>\r\n                <Col md={6}>{`$${this.props.taxes}`}</Col>\r\n            </Row>\r\n        )\r\n    }\r\n\r\n}","import React, { Component } from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\n\r\nexport default class Estimatedtotal extends Component {\r\n    render() {\r\n        return (\r\n            <Row>\r\n                <Col md={6}><h2>Est. Total</h2></Col>\r\n                <Col md={6}><h2>{`$${this.props.price}`}</h2></Col>\r\n            </Row>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Row, Col, Button, Collapse, Image, Media } from 'react-bootstrap';\r\nimport img from '../product.jpeg'\r\n\r\n\r\n\r\nexport default class ItemDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            open: false,\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button\r\n                    className=\"item-details-button\"\r\n                    bsStyle=\"link\"\r\n                    onClick={() => this.setState({ open: !this.state.open })}\r\n                >\r\n                    {this.state.open === false ? `See` : `Hide`} item details\r\n                    {this.state.open === false ? `+` : `-`}\r\n                </Button>\r\n                <Collapse in={this.state.open}>\r\n                    <div>\r\n                        <Media>\r\n                            <Image\r\n                                rounded\r\n                                className=\"product-image\"\r\n                                width={300}\r\n                                fluid\r\n                                src={img} alt=\"bed\" />\r\n                        </Media>\r\n                        <Media.Body>\r\n                            <p>Comfortable bed</p>\r\n                            <Row className=\"show-grid\">\r\n                                <Col md={6}>\r\n                                    <strong>\r\n                                        {`$${this.props.price}`}\r\n                                    </strong>\r\n                                    <br />\r\n                                    <strong className='price-strike'>  {`$${this.props.price}`}\r\n                                    </strong>\r\n                                </Col>\r\n                                <Col md={6}>Qyt: 1</Col>\r\n                            </Row>\r\n                        </Media.Body>\r\n                    </div>\r\n                </Collapse>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import React, { Component } from 'react';\r\nimport {\r\n    Button,\r\n    Collapse,\r\n    Form,\r\n    Row,\r\n    Col,\r\n    FormGroup,\r\n    FormControl,\r\n    FormLabel\r\n} from 'react-bootstrap'\r\nimport { handleChange } from '../actions/PromoCodeAction'\r\nimport { connect } from 'react-redux';\r\n\r\nclass PromoCodeDiscount extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            open: false,\r\n            value: '',\r\n        }\r\n    };\r\n\r\n    handleChange = e => {\r\n        this.props.handleChange(e);\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button className=\"promo-code-button\"\r\n                    bsStyle=\"link\"\r\n                    onClick={() => this.setState({ open: !this.state.open })}\r\n                >\r\n                    {this.state.open === false ? `Apply ` : `Hide `}\r\n                    promo code\r\n                    {this.state.open === false ? ` +` : ` -`}\r\n                </Button>\r\n                <Collapse in={this.state.open}>\r\n                    <div>\r\n                        <Row className=\"show-grid\">\r\n                            <Col md={12}>\r\n                                <Form>\r\n                                    <FormGroup controlId=\"formInLineName\">\r\n                                        <FormLabel>Promo Code</FormLabel>\r\n                                        <FormControl\r\n                                            type=\"text\"\r\n                                            placeholder=\"Enter promo code\"\r\n                                            value={this.props.promoCode}\r\n                                            onChange={this.handleChange}\r\n                                        ></FormControl>\r\n                                    </FormGroup>\r\n                                    <Button\r\n                                        block\r\n                                        bsStyle=\"success\"\r\n                                        className=\"btn-round\"\r\n                                        disabled={this.props.isDisabled}\r\n                                        onClick={this.props.giveDiscount}\r\n                                    >Apply</Button>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Collapse>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    promoCode: state.promoCode.value\r\n});\r\n\r\nexport default connect(mapStateToProps, { handleChange })(PromoCodeDiscount);","import { PROMO_CODE } from './types';\r\n\r\nexport const handleChange = e => dispatch => {\r\n    dispatch({\r\n        type: PROMO_CODE,\r\n        payload: e.target.value,\r\n    })\r\n}\r\n","export const PROMO_CODE = 'PROMO_CODE';","import React, { Component } from 'react';\nimport './App.css';\nimport { Container } from 'react-bootstrap';\nimport Subtotal from './components/Subtotal/Subtotal'\nimport PickupSaving from './components/PickupSaving/PickupSaving'\nimport TaxesFees from './components/TaxesFees/TaxesFees'\nimport EstimatedTotal from './components/EstimatedTotal/EstimatedTotal'\nimport ItemDetails from './components/ItemDetails/ItemDetails'\nimport PromoCodeDiscount from './components/PromoCode/PromoCode'\nimport { connect } from 'react-redux'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      total: 100,\n      PickupSaving: -3.85,\n      taxes: 0,\n      estimatedTotal: 0,\n      disabledPromoButton: false,\n    }\n  }\n\n  componentDidMount() {\n    this.setState({\n      taxes: (this.state.total + this.state.PickupSaving) * 0.0875\n    },\n\n      function () {\n        this.setState({\n          estimatedTotal: (this.state.total + this.state.PickupSaving + this.state.taxes)\n        })\n      })\n  };\n\n  giveDiscountHandler = () => {\n    if (this.props.promoCode === 'DISCOUNT') {\n      this.setState({\n        estimatedTotal: this.state.estimatedTotal * 0.9\n      },\n        function () {\n          this.setState({\n            disabledPromoButton: true\n          })\n        }\n      )\n    }\n  }\n\n  render() {\n    return (\n      <div className='container' >\n        <Container className='purchase-card'>\n          <Subtotal price={this.state.total.toFixed(2)} />\n          <PickupSaving price={this.state.PickupSaving} />\n          <TaxesFees taxes={this.state.taxes.toFixed(2)} />\n          <hr />\n          <EstimatedTotal price={this.state.estimatedTotal.toFixed(2)} />\n          <ItemDetails price={this.state.estimatedTotal.toFixed(2)} />\n          <hr />\n          <PromoCodeDiscount\n            giveDiscount={() => this.giveDiscountHandler()}\n            isDisabled={this.state.disabledPromoButton}\n          />\n        </Container>\n\n      </div>\n    );\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  promoCode: state.promoCode.value,\n\n});\n\n\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { PROMO_CODE } from '../actions/types'\r\n\r\nconst initialState = {\r\n    open: false,\r\n    value: '',\r\n}\r\n\r\nfunction promoCodeReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case PROMO_CODE:\r\n            return ({\r\n                ...state,\r\n                value: action.payload,\r\n            })\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default promoCodeReducer;","import { combineReducers } from 'redux';\r\nimport promoCodeReducer from './PromoCodeReducer';\r\n\r\nexport default combineReducers({\r\n    promoCode: promoCodeReducer,\r\n});","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './components/reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n        applyMiddleware(...middleware),\r\n        window.devToolsExtension ? window.devToolsExtension() : f => f\r\n    )\r\n)\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Provider } from 'react-redux';\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}